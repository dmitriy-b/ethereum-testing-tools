name: "Slack Report"
description: "Send a Slack notification using ethereum-testing-tools slack-report script via uvx"

inputs:
  webhook_url:
    description: "Slack Incoming Webhook URL"
    required: true
  verdict:
    description: "Report verdict: pass or fail (default: pass)"
    required: false
    default: "pass"
  description:
    description: "Short description of what the report is about (default: Auto tests)"
    required: false
  version:
    description: "Build or app version"
    required: false
  report_link:
    description: "Link to a human-readable report (e.g., Allure, Grafana, etc.)"
    required: false
  summary:
    description: "Precomputed JSON summary string; if not provided, summary can be inferred from report_name file when used by library calls"
    required: false
  timestamp:
    description: "Timestamp to display (ISO-8601 string). If not provided, script or caller may compute it"
    required: false
  pipeline_link:
    description: "CI job or pipeline link"
    required: false
  report_name:
    description: "Name of JSON file with test results (looked up by the script when summary is not provided)"
    required: false
  text:
    description: "Additional text placed before the attachments"
    required: false
  additional_info:
    description: "Any other additional information shown in the footer"
    required: false
  ref:
    description: "Git ref of ethereum-testing-tools to run (branch, tag, or commit). Defaults to main"
    required: false
    default: "main"

runs:
  using: "composite"
  steps:
    - name: Ensure uv is installed
      id: install-uv
      shell: bash
      run: |
        set -euo pipefail
        if ! command -v uv >/dev/null 2>&1; then
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> "$GITHUB_PATH"
        fi
        uv --version

    - name: Send Slack report
      shell: bash
      env:
        REF: ${{ inputs.ref }}
        WEBHOOK_URL: ${{ inputs.webhook_url }}
        VERDICT: ${{ inputs.verdict }}
        DESCRIPTION: ${{ inputs.description }}
        VERSION: ${{ inputs.version }}
        REPORT_LINK: ${{ inputs.report_link }}
        SUMMARY: ${{ inputs.summary }}
        TIMESTAMP: ${{ inputs.timestamp }}
        PIPELINE_LINK: ${{ inputs.pipeline_link }}
        REPORT_NAME: ${{ inputs.report_name }}
        TEXT: ${{ inputs.text }}
        ADDITIONAL_INFO: ${{ inputs.additional_info }}
      run: |
        set -euo pipefail
        cmd=(uvx --from "git+https://github.com/dmitriy-b/ethereum-testing-tools.git@${REF}" slack-report --webhook-url "$WEBHOOK_URL")
        if [ -n "${VERDICT:-}" ]; then cmd+=(--verdict "$VERDICT"); fi
        if [ -n "${DESCRIPTION:-}" ]; then cmd+=(--description "$DESCRIPTION"); fi
        if [ -n "${VERSION:-}" ]; then cmd+=(--version "$VERSION"); fi
        if [ -n "${REPORT_LINK:-}" ]; then cmd+=(--report-link "$REPORT_LINK"); fi
        if [ -n "${SUMMARY:-}" ]; then cmd+=(--summary "$SUMMARY"); fi
        if [ -n "${TIMESTAMP:-}" ]; then cmd+=(--timestamp "$TIMESTAMP"); fi
        if [ -n "${PIPELINE_LINK:-}" ]; then cmd+=(--pipeline-link "$PIPELINE_LINK"); fi
        if [ -n "${REPORT_NAME:-}" ]; then cmd+=(--report-name "$REPORT_NAME"); fi
        if [ -n "${TEXT:-}" ]; then cmd+=(--text "$TEXT"); fi
        if [ -n "${ADDITIONAL_INFO:-}" ]; then cmd+=(--additional-info "$ADDITIONAL_INFO"); fi
        echo "> Running: ${cmd[*]}"
        "${cmd[@]}" 